sudo: required
dist: trusty

# language: rust
# rust:
#   - stable
#   - beta
#   - nightly

# language: python
# python:
#   - "2.7"
#   - "3.5"

# env:
#   - RUST = stable
# - RUST = beta
#   global:
#     - DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64


matrix:
  include:
    - os: osx
      language: python
      python: "3.5"
      # env: PYTHON=3.5
    - os: linux
      language: python
      python: "2.7"
      # env: PYTHON=2.7
      sudo: required
    - os: linux
      language: python
      python: "3.5"
      # env: PYTHON=3.5
      sudo: required
      # services:
      #   - docker
      # env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64

  allow_failures:
    - os: osx
    #   - rust: nightly


addons:
  apt:
    sources:
      - deadsnakes      # for python 3.5
    packages:
      - build-essential
      - libc6
      - mmv
      # - python3.5
      # - python3.5-dev

before_install:
  - which python
  - which python3
  - python -V
  - python3 -V
  - python3.5 -V
  - ls /opt/python/

install:
  - pip install wheel
  - curl -sL https://static.rust-lang.org/rustup.sh -o ~/rustup.sh
  - sh ~/rustup.sh --prefix=/usr/local --spec=stable -y 2> /dev/null
  - ls -la /usr/local/bin
  # - curl -sL https://static.rust-lang.org/rustup.sh -o ~/rust-installer/rustup.sh
  # - sh ~/rust-installer/rustup.sh --prefix=~/rust --spec=stable -y --disable-sudo 2> /dev/null
  # - curl https://sh.rustup.rs -sSf | sh -s -- -y
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker pull $DOCKER_IMAGE; fi

#
# defaults
#
# script:
# - cargo build --verbose
# - cargo test --verbose

script:
  # - cargo build --verbose
  - cargo test --verbose --release
  - python setup.py bdist_wheel
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/build-wheels.sh $TRAVIS_OS_NAME; fi
  # - ls wheelhouse/

# after_script:
  # - mmv "dist/rparser-*-cp*-cp*-manylinux1_*.whl" "/io/wheelhouse/rust_fst-#1-py2.py3-none-manylinux1_#4.whl"
# https://www.python.org/dev/peps/pep-0427/#file-name-convention

before_deploy:
  - sudo pip install twine
  - ls -la dist
  - mmv "dist/rparser-*-*-*-*_*.whl" "dist/rparser-#1-py2.py3-none-any.whl"
  - ls -la dist
  # rparser-0.1.6-cp35-cp35m-linux_x86_64.whl

# To use encrypted variables:
#
# sudo gem install travis
# travis encrypt MY_SECRET_ENV=super_secret --add env.matrix
# travis encrypt MY_SECRET_ENV=super_secret -r pashinin-com/parser
#
# The travis slug is stored in .git/config. You can change it there
# instead of constantly using the -r option.
#
# You need to register your package first before deploying will work:
#
# python3 setup.py bdist_wheel
# twine upload dist/rparser-0.1.1-cp35-cp35m-linux_x86_64.whl
deploy:
  - provider: pypi
    user: pashinin
    password:
      secure: "t/CzlbFJSbjxY6AnzC6DKWGNtVjHR0vbTMde4efncw6StTzUWoG/INNng92KloQk9p73i1o1wAd2ZV3sZYh5QiGiN2u1SoeIaVY+vPQyphVpbCWLw9jVuEeSOJCbMM/zxE0xDayiGc6Oiy9nYLXFeLHMSiMDyJJZSzkrAefzoJN8J7P5IJ3hIQ4P177IHS9y4m8hWBWLjWwOoicAHZMoAweTf01kRDEdChsf7NKa7lIiQ563Wf9Z5QvJL+/qum/+yUwzz+I+PumuI6CfAMgifwX7JDjt9X351K6rUtWhu/K5zaqSFLbHfuP4LBSjsGDQG+PyK/6592DjpzzFxIE16mf9+WqJ0gBs1T4RKuv74PRJQjEg1X/IjOggRtv/o1/gIGHtiM3NR54FL7s6cQtYHAfbTvyM7lekR+QcYn4LoVEQTZKkVgAkKB5ukMZDeCdW1tPfc+ElRAbMBb35AIpD5wPvq67IApVYd5dP4ApAasFsEHHe3XYHW5SGrv7T/+wVgA1Dl/NxJp+Snh3lkT9wcziwTlg4ALMF9exqsZ5KQepbOUsvmRM8UEuyp2XJ7q3MnYUOciwFsuNIxhxNnOO0YA2R5M08XQrmqBFUJ+upDSBEZEFyqJtKo1BBr6CPoRVMFdK+AyM1uhwDJyO1FuARdYUfv9Yi8+jr0QPQ2ibDBuw="
    skip_cleanup: true
    on:
      tags: true
      # repo: pashinin-com/parser


notifications:
  email: false
